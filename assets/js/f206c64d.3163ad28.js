"use strict";(self.webpackChunkreact_native_echarts=self.webpackChunkreact_native_echarts||[]).push([[8169],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6776:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294);const r=["@wuba/react-native-echarts@1.1.0-all.0","react-native-svg","react-native-reanimated","@shopify/react-native-skia","react-native-gesture-handler"];function o(e){const n=e.name?decodeURIComponent(e.name):"Example",t=e.description?decodeURIComponent(e.description):"Example usage",o=`App.${e.ext?decodeURIComponent(e.ext):"tsx"}`,i=encodeURIComponent(JSON.stringify({[o]:{type:"CODE",contents:e.children}})),s=e.dependencies||r.join(","),c=e.platform||"web",l=e.supportedPlatforms||"ios,android,web",p=e.theme||"light",d=e.preview||"true",u=e.loading||"lazy";return a.createElement("div",{className:"snack-player","data-snack-name":n,"data-snack-description":t,"data-snack-files":i,"data-snack-dependencies":s,"data-snack-platform":c,"data-snack-supported-platforms":l,"data-snack-theme":p,"data-snack-preview":d,"data-snack-loading":u})}},8576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),o=t(6776);const i="// Original example: https://echarts.apache.org/examples/en/editor.html?c=area-simple\n// The following code is modified from\n// https://github.com/apache/echarts-examples/blob/gh-pages/public/examples/ts/area-simple.ts\n// under Apache License 2.0.\n\nimport React, { useRef, useEffect } from 'react';\nimport { StyleSheet, View, Dimensions } from 'react-native';\nimport { SVGRenderer, SkiaChart, echarts } from '@wuba/react-native-echarts';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\n\necharts.use([SVGRenderer]);\n\nconst E_HEIGHT = 400;\nconst E_WIDTH = Dimensions.get('window').width;\n\nlet base = +new Date(1968, 9, 3);\nlet oneDay = 24 * 3600 * 1000;\nlet date = [];\nlet data = [Math.random() * 300];\nfor (let i = 1; i < 20000; i++) {\n  var now = new Date((base += oneDay));\n  date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n  data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]));\n}\n\nconst option = {\n  tooltip: {\n    trigger: 'axis',\n    position: function (pt) {\n      return [pt[0], '10%'];\n    }\n  },\n  title: {\n    left: 'center',\n    text: 'Large Area Chart'\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none'\n      },\n      restore: {},\n      saveAsImage: {}\n    }\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: date\n  },\n  yAxis: {\n    type: 'value',\n    boundaryGap: [0, '100%']\n  },\n  dataZoom: [\n    {\n      type: 'inside',\n      start: 0,\n      end: 10\n    },\n    {\n      start: 0,\n      end: 10\n    }\n  ],\n  series: [\n    {\n      name: 'Fake Data',\n      type: 'line',\n      symbol: 'none',\n      sampling: 'lttb',\n      itemStyle: {\n        color: 'rgb(255, 70, 131)'\n      },\n      areaStyle: {\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: 'rgb(255, 158, 68)'\n          },\n          {\n            offset: 1,\n            color: 'rgb(255, 70, 131)'\n          }\n        ])\n      },\n      data: data\n    }\n  ]\n};\n\nexport default function App() {\n  const skiaRef = useRef<any>(null);\n  useEffect(() => {\n    let chart: any;\n    if (skiaRef.current) {\n      chart = echarts.init(skiaRef.current, 'light', {\n        renderer: 'svg',\n        width: E_WIDTH,\n        height: E_HEIGHT,\n      });\n      chart.setOption(option);\n    }\n    return () => chart?.dispose();\n  }, []);\n\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <View style={styles.container}>\n        <SkiaChart ref={skiaRef} useRNGH />\n      </View>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});",s={sidebar_position:3},c="Large Area Chart Use React Native Gesture Handler",l={unversionedId:"expo-snacks/large-area-chart-use-rngh",id:"expo-snacks/large-area-chart-use-rngh",title:"Large Area Chart Use React Native Gesture Handler",description:"",source:"@site/docs/expo-snacks/large-area-chart-use-rngh.md",sourceDirName:"expo-snacks",slug:"/expo-snacks/large-area-chart-use-rngh",permalink:"/react-native-echarts/docs/expo-snacks/large-area-chart-use-rngh",draft:!1,editUrl:"https://github.com/wuba/react-native-echarts/tree/docs/docs/expo-snacks/large-area-chart-use-rngh.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Simple Line Chart",permalink:"/react-native-echarts/docs/expo-snacks/simple-line-chart"},next:{title:"Import individually",permalink:"/react-native-echarts/docs/advanced-guides/import-individually"}},p={},d=[],u={toc:d},m="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"large-area-chart-use-react-native-gesture-handler"},"Large Area Chart Use React Native Gesture Handler"),(0,r.kt)(o.Z,{name:"Large Area Chart",mdxType:"SnackPlayer"},i))}f.isMDXComponent=!0}}]);